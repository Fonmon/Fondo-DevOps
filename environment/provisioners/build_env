#!/bin/bash

####################################
# Script to build prod like env    #
####################################

if [ $# -ne 2 ]; then
    echo 'Arguments: linux_user linux_group'
    exit 1
fi

USER=$1
GROUP=$2

cd /home/$USER/Fondo-DevOps/
echo "export HOME_FONMON=$(pwd)" >> /etc/environment

git remote set-url origin git@github.com:Fonmon/Fondo-DevOps.git

# docker install
if [ -z "$(which docker)" ]; then
	curl -sSL https://get.docker.com/ | sh
	usermod -aG docker ${USER}
fi

# docker-compose install
if [ -z "$(which docker-compose)" ]; then
	curl -L https://github.com/docker/compose/releases/download/1.23.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
	chmod +x /usr/local/bin/docker-compose
fi

# certbot install
apt-get install -y software-properties-common unzip python3 make
add-apt-repository ppa:certbot/certbot -y
apt-get update
apt-get install -y certbot

cp deploy/.env.base deploy/.env

mkdir dumps
mkdir -p certificates/web
mkdir -p certificates/api
mkdir -p front/static_files
mkdir logs

chown -R ${USER}:${GROUP} $(pwd)

# entrypoint_deploy command
cp environment/scripts/entrypoint_deploy /usr/bin/
chmod +x /usr/bin/entrypoint_deploy

# semver tool
git clone https://github.com/fsaintjacques/semver-tool.git && \
    cd semver-tool && \
    make install && \
    cd .. && rm -rf semver-tool

# create a file and make it a swapfile
if [ -z "$(find / -maxdepth 1 -name 'swapfile')" ]; then
    fallocate --length 2GiB /swapfile
    chmod 600 /swapfile
    mkswap /swapfile
    swapon /swapfile
    echo "/swapfile none swap defaults 0 0" >> /etc/fstab
fi

# FonmonBot Git user
git config user.name "FonmonBot"
git config user.email fondomontanez@gmail.com

# build network for containers
docker network create \
	--scope=local \
	--driver=bridge \
	fondo_network
